#   Copyright
#
#      Copyright (C) 2010 Matt Mahoney <matmahoney@yahoo.com>
#      Copyright (C) 2009-2010 Jari Aalto <jari.aalto@cante.net>
#
#   License
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 3 of the License, or
#       (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program. If not, see <http://www.gnu.org/licenses/>.
#
#   Description
#
#	To learn what TOP LEVEL section to use in manual pages,
#	see POSIX/Susv standard and "Utility Description Defaults" at
#	http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap01.html#tag_01_11
#
#	This is manual page in Perl POD format. Read more at
#	http://perldoc.perl.org/perlpod.html or run command:
#
#	    perldoc perlpod | less
#
#	To check the syntax:
#
#	    podchecker *.pod
#
#	Create manual page with command:
#
#	    pod2man PAGE.N.pod > PAGE.N

=pod

=head1 NAME

unzpaq - PAQ open standard maximum compressor unpacker

=head1 SYNOPSIS

  list   : unzpaq l archive.zpaq
  extract: unzpaq x archive.zpaq [file ...]

=head1 DESCRIPTION

=head2 General

PAQ is a series of open source data compression archivers that have
evolved through collaborative development to top rankings on several
benchmarks measuring compression ratio although at the expense of
speed and memory usage.

Zpaq ia a proposed standard format for highly compressed data that
allows new compression algorithms to be developed without breaking
compatibility with older programs. Zpaq is based on PAQ-like context
mixing algorithms which are top ranked on many benchmarks. The format
supports archivers, single file compressors, and memory to memory
compression.

I<NOTE:> in extract mode, if the FILES are listed the files are
renamed during written out.

=head2 Commands

=over 4

=item B<l>

List contents of archive.

=item B<x>

Extract. Use "ox" to extract fast. You can extract more slowly with
plain "x" if you don't have C++ installed. Output files are renamed in
the same order they are stored and listed. If you don't rename the
output files, then the files will be extracted to the current
directory with the same names they had when stored.

=back

=head1 OPTIONS

None.

=head1 EXAMPLES

To list the contents of an archive. Files are listed in the same order
they were added:

    zpaq l archive.zpaq

To extract the contents of the archive. New files are created and
named according to the stored filenames. Does not clobber existing
files. Extracts to current directory:

    zpaq x archive.zpaq

If the files to be extracted already exist, then zpaq will
refuse to clobber them and skip to the next file. If the files
are compressed with a path (folder or directory), then that
directory must exist when the file is extracted. zpaq will
not create directories.

To extract files and renames in the order they were added to the
archive. Clobbers any already existing output files. The number of
files extracted is the smaller of the number of filenames on the
command line or the number of files in the archive.

    zpaq x archive.zpaq file ...

To extract and rename:

    zpaq x archive.zpaq files ...
    unzpaq x archive.zpaq files ...

Files are extracted in the same order they are saved and renamed.
Unlike using stored names, if the file exists, then it is
overwritten (clobbered). Only files named on the command line
are extracted. Any additional files in the archive are ignored.
For example:

    zpaq x archive.zpaq foo bar

=head1 ENVIRONMENT

None.

=head1 FILES

None.

=head1 STANDARDS

See zpaq*.pdf (ZPAQ Level 1 and later) in section AVAILABILITY . It is
anticipated that future levels (ZPAQ-2, ZPAQ-3, etc.) will be backward
compatible, such that newer levels can read archives produced by older
programs.

=head1 AVAILABILITY

http://mattmahoney.net/dc

=head1 SEE ALSO

C<bzip2(1)>
C<gzip(1)>
C<lzop(1)>
C<lzma(1)>
C<p7zip(1)>
C<rzip(1)>
C<unace(1)>
C<unrar(1)>
C<unzip(1)>
C<zip(1)>
C<zpaq(1)>

=head1 AUTHORS

Program was written by Matt Mahoney <matmahoney@yahoo.com>

This manual page was put together by Jari Aalto
<jari.aalto@cante.net>. Updated and maintained by Matt Mahoney.
Published under license GNU GPL version 2 or (at your option) any
later version. For more information about license, visit
<http://www.gnu.org/copyleft/gpl.html>.

=cut
